---
import DigitalKeyboard from "../../components/game/DigitalKeyboard.astro"
import WordGrid from "../../components/game/WordGrid.astro"
import Layout from "../../layouts/Layout.astro"
---

<Layout title="Classic Game">
  <WordGrid />
  <DigitalKeyboard />
</Layout>

<script>
  import { KEYBOARD_KEYS } from "../../lib/constants";
  import type { GameSession} from "../../lib/gameSession";
  import { requestGameSession } from "../../scripts/requestGameSession";
  import { guessRequest } from "../../scripts/guessRequest";

  let gameSession: GameSession = await requestGameSession();
  let keyboardKeys = structuredClone(KEYBOARD_KEYS);

  const pageBody = document.querySelector('body') as HTMLBodyElement;


  /**
   * Validates an input key
   * @param key - keyboard key
   * @returns Whether the key is valid
   */
  function validKeyInput(key: string): boolean {
    let found: boolean = false;

    keyboardKeys.push(['ENTER', 'BACKSPACE']); // Also allow enter/backspace input
    keyboardKeys?.forEach(row => {
      if (row.includes(key)) found = true;
    });

    return found;
  }


  /**
   * 
   */
  function updateGameState(): void {
    const event = new CustomEvent("transmitCurrentGameState", {
      detail: {
        gameSession: gameSession,
      }
    });
    window.dispatchEvent(event);
  }


  pageBody?.addEventListener('keydown', (e) => {
    const keyInput: string = e.key.toUpperCase();

    if (!validKeyInput(keyInput)) return;
    const event = new CustomEvent("keyInput", {
      detail: {
        keyInput: keyInput,
      }
    });
    window.dispatchEvent(event);
  });


  window.addEventListener("guessRequest", async (e) => {
    const event = e as CustomEvent;

    gameSession.current_guess = event.detail.word;
    gameSession.status = "submit-guess";
    gameSession.current_guess_valid = false;

    gameSession = await guessRequest(gameSession);
    updateGameState();
  });


  updateGameState();
  window.dispatchEvent(new CustomEvent("gamePageLoaded"));
</script>